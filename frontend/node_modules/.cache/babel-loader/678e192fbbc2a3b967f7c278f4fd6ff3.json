{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\components\\\\ThemeCustomizer\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // actions\n\nimport { changeLayout, changeLayoutWidth, changeMenuPositions, changeSidebarTheme, changeSidebarType, toggleSidebarUserInfo, changeTopbarTheme } from '../../redux/actions'; // store\n\n// constants\nimport * as layoutConstants from '../../constants/layout'; // custom hook\n\nimport { useViewport } from '../../hooks/useViewPort'; // components\n\nimport LayoutTypes from './LayoutTypes';\nimport LayoutWidth from './LayoutWidth';\nimport MenuPositions from './MenuPositions';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\nimport SidebarUserInfo from './SidebarUserInfo';\nimport TopbarTheme from './TopbarTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeCustomizer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    width\n  } = useViewport();\n  const {\n    layoutType,\n    layoutWidth,\n    menuPosition,\n    leftSideBarType,\n    leftSideBarTheme,\n    showSidebarUserInfo,\n    topbarTheme\n  } = useSelector(state => ({\n    layoutType: state.Layout.layoutType,\n    layoutWidth: state.Layout.layoutWidth,\n    menuPosition: state.Layout.menuPosition,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n    showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n    topbarTheme: state.Layout.topbarTheme\n  }));\n  const [disableMenuPositions, setDisableMenuPositions] = useState(false);\n  const [disableSidebarTheme, setDisableSidebarTheme] = useState(false);\n  const [disableSidebarType, setDisableSidebarType] = useState(false);\n  const [disableSidebarUser, setDisableSidebarUser] = useState(false);\n  /**\n   * change state based on props changes\n   */\n\n  const _loadStateFromProps = useCallback(() => {\n    setDisableMenuPositions(layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n    setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n    setDisableSidebarType(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL && layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN && width > 991);\n    setDisableSidebarUser(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL && layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n  }, [layoutType, width]);\n\n  useEffect(() => {\n    _loadStateFromProps();\n  }, [_loadStateFromProps]);\n  /**\n   * On layout change\n   */\n\n  const changeLayoutType = value => {\n    var layout = value;\n\n    switch (layout) {\n      case 'horizontal':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n        break;\n\n      case 'detached':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n        break;\n\n      case 'vertical':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n        break;\n\n      default:\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n        break;\n    }\n  };\n  /**\n   * Change the width mode\n   */\n\n\n  const changeWidthMode = value => {\n    var mode = value;\n\n    switch (mode) {\n      case 'boxed':\n        dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED));\n        break;\n\n      default:\n        dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID));\n        break;\n    }\n  };\n  /*\n   * Change menus position\n   */\n\n\n  const changeMenuPosition = value => {\n    var position = value;\n\n    switch (position) {\n      case 'scrollable':\n        dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE));\n        break;\n\n      default:\n        dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED));\n        break;\n    }\n  };\n  /**\n   * Changes the theme\n   */\n\n\n  const changeLeftSidebarTheme = value => {\n    var theme = value;\n\n    switch (theme) {\n      case 'dark':\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK));\n        break;\n\n      default:\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT));\n        break;\n    }\n  };\n  /**\n   * Change the leftsiderbar type\n   */\n\n\n  const changeLeftSiderbarType = value => {\n    var type = value;\n\n    switch (type) {\n      case 'condensed':\n        dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n        break;\n\n      case 'compact':\n        dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT));\n        break;\n\n      default:\n        dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n        break;\n    }\n  };\n  /*\n   * Toggle the leftsidebar use info\n   */\n\n\n  const toggleLeftSidebarUserInfo = value => {\n    var checked = value;\n    dispatch(toggleSidebarUserInfo(checked));\n  };\n  /*\n   * Change topbar theme\n   */\n\n\n  const changeTopBarTheme = value => {\n    var theme = value;\n\n    switch (theme) {\n      case 'light':\n        dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT));\n        break;\n\n      default:\n        dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK));\n        break;\n    }\n  };\n  /**\n   * Reset everything\n   */\n\n\n  const reset = () => {\n    changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n    changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n    changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n    changeLeftSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT);\n    toggleLeftSidebarUserInfo(false);\n    changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n    changeLeftSiderbarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"fw-medium px-3 m-0 py-2 text-uppercase bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-block py-1\",\n        children: \"Theme Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customize \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), \" the overall color scheme, sidebar menu, etc.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LayoutTypes, {\n        changeLayoutType: changeLayoutType,\n        layoutType: layoutType,\n        layoutConstants: layoutConstants.LayoutTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LayoutWidth, {\n        changeWidthMode: changeWidthMode,\n        layoutWidth: layoutWidth,\n        layoutConstants: layoutConstants.LayoutWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), disableMenuPositions && /*#__PURE__*/_jsxDEV(MenuPositions, {\n        menuPosition: menuPosition,\n        changeMenuPosition: changeMenuPosition,\n        layoutConstants: layoutConstants.MenuPositions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), disableSidebarTheme && /*#__PURE__*/_jsxDEV(LeftSideBarTheme, {\n        changeLeftSidebarTheme: changeLeftSidebarTheme,\n        leftSideBarTheme: leftSideBarTheme,\n        layoutConstants: layoutConstants.SideBarTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this), disableSidebarType && /*#__PURE__*/_jsxDEV(LeftSideBarType, {\n        changeLeftSiderbarType: changeLeftSiderbarType,\n        leftSideBarType: leftSideBarType,\n        layoutConstants: layoutConstants.SideBarTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this), disableSidebarUser && /*#__PURE__*/_jsxDEV(SidebarUserInfo, {\n        toggleLeftSidebarUserInfo: toggleLeftSidebarUserInfo,\n        showSidebarUserInfo: showSidebarUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TopbarTheme, {\n        changeTopBarTheme: changeTopBarTheme,\n        topbarTheme: topbarTheme,\n        layoutConstants: layoutConstants.TopbarTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          id: \"resetBtn\",\n          onClick: () => reset(),\n          children: \"Reset to Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeCustomizer, \"k9yb9HOMZHImnqtS5c2WGlfm0Yw=\", false, function () {\n  return [useDispatch, useViewport, useSelector];\n});\n\n_c = ThemeCustomizer;\nexport default ThemeCustomizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeCustomizer\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/components/ThemeCustomizer/index.tsx"],"names":["React","useState","useEffect","useCallback","useSelector","useDispatch","changeLayout","changeLayoutWidth","changeMenuPositions","changeSidebarTheme","changeSidebarType","toggleSidebarUserInfo","changeTopbarTheme","layoutConstants","useViewport","LayoutTypes","LayoutWidth","MenuPositions","LeftSideBarTheme","LeftSideBarType","SidebarUserInfo","TopbarTheme","ThemeCustomizer","dispatch","width","layoutType","layoutWidth","menuPosition","leftSideBarType","leftSideBarTheme","showSidebarUserInfo","topbarTheme","state","Layout","disableMenuPositions","setDisableMenuPositions","disableSidebarTheme","setDisableSidebarTheme","disableSidebarType","setDisableSidebarType","disableSidebarUser","setDisableSidebarUser","_loadStateFromProps","LAYOUT_TWO_COLUMN","LAYOUT_HORIZONTAL","changeLayoutType","value","layout","LAYOUT_DETACHED","LAYOUT_VERTICAL","changeWidthMode","mode","LAYOUT_WIDTH_BOXED","LAYOUT_WIDTH_FLUID","changeMenuPosition","position","MENU_POSITION_SCROLLABLE","MENU_POSITION_FIXED","changeLeftSidebarTheme","theme","SideBarTheme","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_THEME_LIGHT","changeLeftSiderbarType","type","SideBarTypes","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_COMPACT","LEFT_SIDEBAR_TYPE_DEFAULT","toggleLeftSidebarUserInfo","checked","changeTopBarTheme","TOPBAR_THEME_LIGHT","TOPBAR_THEME_DARK","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// actions\nimport {\n    changeLayout,\n    changeLayoutWidth,\n    changeMenuPositions,\n    changeSidebarTheme,\n    changeSidebarType,\n    toggleSidebarUserInfo,\n    changeTopbarTheme,\n} from '../../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../../redux/store';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// custom hook\nimport { useViewport } from '../../hooks/useViewPort';\n\n// components\nimport LayoutTypes from './LayoutTypes';\nimport LayoutWidth from './LayoutWidth';\nimport MenuPositions from './MenuPositions';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\nimport SidebarUserInfo from './SidebarUserInfo';\nimport TopbarTheme from './TopbarTheme';\n\nconst ThemeCustomizer = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    const { width } = useViewport();\n\n    const {\n        layoutType,\n        layoutWidth,\n        menuPosition,\n        leftSideBarType,\n        leftSideBarTheme,\n        showSidebarUserInfo,\n        topbarTheme,\n    } = useSelector((state: RootState) => ({\n        layoutType: state.Layout.layoutType,\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        topbarTheme: state.Layout.topbarTheme,\n    }));\n\n    const [disableMenuPositions, setDisableMenuPositions] = useState<boolean>(false);\n    const [disableSidebarTheme, setDisableSidebarTheme] = useState<boolean>(false);\n    const [disableSidebarType, setDisableSidebarType] = useState<boolean>(false);\n    const [disableSidebarUser, setDisableSidebarUser] = useState<boolean>(false);\n\n    /**\n     * change state based on props changes\n     */\n    const _loadStateFromProps = useCallback(() => {\n        setDisableMenuPositions(layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n        setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n        setDisableSidebarType(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n                layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n                width > 991\n        );\n        setDisableSidebarUser(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n                layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n        );\n    }, [layoutType, width]);\n\n    useEffect(() => {\n        _loadStateFromProps();\n    }, [_loadStateFromProps]);\n\n    /**\n     * On layout change\n     */\n    const changeLayoutType = (value: any) => {\n        var layout = value;\n        switch (layout) {\n            case 'horizontal':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n                break;\n            case 'detached':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n                break;\n            case 'vertical':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n                break;\n            default:\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n                break;\n        }\n    };\n\n    /**\n     * Change the width mode\n     */\n    const changeWidthMode = (value: any) => {\n        var mode = value;\n\n        switch (mode) {\n            case 'boxed':\n                dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED));\n                break;\n            default:\n                dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID));\n                break;\n        }\n    };\n\n    /*\n     * Change menus position\n     */\n    const changeMenuPosition = (value: any) => {\n        var position = value;\n\n        switch (position) {\n            case 'scrollable':\n                dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE));\n                break;\n            default:\n                dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED));\n                break;\n        }\n    };\n\n    /**\n     * Changes the theme\n     */\n    const changeLeftSidebarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'dark':\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK));\n                break;\n            default:\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT));\n                break;\n        }\n    };\n\n    /**\n     * Change the leftsiderbar type\n     */\n    const changeLeftSiderbarType = (value: any) => {\n        var type = value;\n        switch (type) {\n            case 'condensed':\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n                break;\n            case 'compact':\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT));\n                break;\n            default:\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n                break;\n        }\n    };\n\n    /*\n     * Toggle the leftsidebar use info\n     */\n    const toggleLeftSidebarUserInfo = (value: any) => {\n        var checked = value;\n        dispatch(toggleSidebarUserInfo(checked));\n    };\n\n    /*\n     * Change topbar theme\n     */\n    const changeTopBarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'light':\n                dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT));\n                break;\n            default:\n                dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK));\n                break;\n        }\n    };\n\n    /**\n     * Reset everything\n     */\n    const reset = () => {\n        changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n        changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n        changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n        changeLeftSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT);\n        toggleLeftSidebarUserInfo(false);\n        changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n        changeLeftSiderbarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT);\n    };\n\n    return (\n        <React.Fragment>\n            <h6 className=\"fw-medium px-3 m-0 py-2 text-uppercase bg-light\">\n                <span className=\"d-block py-1\">Theme Settings</span>\n            </h6>\n            <div className=\"p-3\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <strong>Customize </strong> the overall color scheme, sidebar menu, etc.\n                </div>\n\n                {/* Layouts */}\n                <LayoutTypes\n                    changeLayoutType={changeLayoutType}\n                    layoutType={layoutType}\n                    layoutConstants={layoutConstants.LayoutTypes}\n                />\n\n                {/* Width */}\n                <LayoutWidth\n                    changeWidthMode={changeWidthMode}\n                    layoutWidth={layoutWidth}\n                    layoutConstants={layoutConstants.LayoutWidth}\n                />\n\n                {/* Menu Posiotions */}\n                {disableMenuPositions && (\n                    <MenuPositions\n                        menuPosition={menuPosition}\n                        changeMenuPosition={changeMenuPosition}\n                        layoutConstants={layoutConstants.MenuPositions}\n                    />\n                )}\n\n                {/* Left Sidebar */}\n                {disableSidebarTheme && (\n                    <LeftSideBarTheme\n                        changeLeftSidebarTheme={changeLeftSidebarTheme}\n                        leftSideBarTheme={leftSideBarTheme}\n                        layoutConstants={layoutConstants.SideBarTheme}\n                    />\n                )}\n\n                {/* Left Sidebar Size */}\n                {disableSidebarType && (\n                    <LeftSideBarType\n                        changeLeftSiderbarType={changeLeftSiderbarType}\n                        leftSideBarType={leftSideBarType}\n                        layoutConstants={layoutConstants.SideBarTypes}\n                    />\n                )}\n\n                {/* User Info */}\n                {disableSidebarUser && (\n                    <SidebarUserInfo\n                        toggleLeftSidebarUserInfo={toggleLeftSidebarUserInfo}\n                        showSidebarUserInfo={showSidebarUserInfo}\n                    />\n                )}\n\n                {/* Topbar */}\n                <TopbarTheme\n                    changeTopBarTheme={changeTopBarTheme}\n                    topbarTheme={topbarTheme}\n                    layoutConstants={layoutConstants.TopbarTheme}\n                />\n\n                <div className=\"d-grid mt-4\">\n                    <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={() => reset()}>\n                        Reset to Default\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ThemeCustomizer;\n"]},"metadata":{},"sourceType":"module"}