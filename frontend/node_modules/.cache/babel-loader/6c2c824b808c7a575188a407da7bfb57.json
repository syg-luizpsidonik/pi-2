{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\components\\\\Table.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useRef, useEffect, forwardRef, useState } from 'react';\nimport { useTable, useSortBy, usePagination, useRowSelect, useGlobalFilter, useAsyncDebounce, useExpanded } from 'react-table';\nimport classNames from 'classnames'; // components\n\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// Define a default UI for filtering\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n  searchBoxClass\n}) => {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(searchBoxClass),\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"d-flex align-items-center\",\n      children: [\"Search :\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        value: value || '',\n        onChange: e => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        },\n        placeholder: `${count} records...`,\n        className: \"form-control w-auto ms-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\nconst IndeterminateCheckbox = /*#__PURE__*/forwardRef(_c2 = _s2(({\n  indeterminate,\n  ...rest\n}, ref) => {\n  _s2();\n\n  const defaultRef = useRef();\n  const resolvedRef = ref || defaultRef;\n  useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        ref: resolvedRef,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"form-check-input\",\n        className: \"form-check-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c3 = IndeterminateCheckbox;\n\nconst Table = props => {\n  _s3();\n\n  const isSearchable = props['isSearchable'] || false;\n  const isSortable = props['isSortable'] || false;\n  const pagination = props['pagination'] || false;\n  const isSelectable = props['isSelectable'] || false;\n  const isExpandable = props['isExpandable'] || false;\n  const sizePerPageList = props['sizePerPageList'] || [];\n  let otherProps = {};\n\n  if (isSearchable) {\n    otherProps['useGlobalFilter'] = useGlobalFilter;\n  }\n\n  if (isSortable) {\n    otherProps['useSortBy'] = useSortBy;\n  }\n\n  if (isExpandable) {\n    otherProps['useExpanded'] = useExpanded;\n  }\n\n  if (pagination) {\n    otherProps['usePagination'] = usePagination;\n  }\n\n  if (isSelectable) {\n    otherProps['useRowSelect'] = useRowSelect;\n  }\n\n  const dataTable = useTable({\n    columns: props['columns'],\n    data: props['data'],\n    initialState: {\n      pageSize: props['pageSize'] || 10\n    }\n  }, otherProps.hasOwnProperty('useGlobalFilter') && otherProps['useGlobalFilter'], otherProps.hasOwnProperty('useSortBy') && otherProps['useSortBy'], otherProps.hasOwnProperty('useExpanded') && otherProps['useExpanded'], otherProps.hasOwnProperty('usePagination') && otherProps['usePagination'], otherProps.hasOwnProperty('useRowSelect') && otherProps['useRowSelect'], hooks => {\n    isSelectable && hooks.visibleColumns.push(columns => [// Let's make a column for selection\n    {\n      id: 'selection',\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({\n        getToggleAllPageRowsSelectedProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllPageRowsSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }, this),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }, this)\n    }, ...columns]);\n    isExpandable && hooks.visibleColumns.push(columns => [// Let's make a column for selection\n    {\n      // Build our expander column\n      id: 'expander',\n      // Make sure it has an ID\n      Header: ({\n        getToggleAllRowsExpandedProps,\n        isAllRowsExpanded\n      }) => /*#__PURE__*/_jsxDEV(\"span\", { ...getToggleAllRowsExpandedProps(),\n        children: isAllRowsExpanded ? '-' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }, this),\n      Cell: ({\n        row\n      }) => // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      row.canExpand ? /*#__PURE__*/_jsxDEV(\"span\", { ...row.getToggleRowExpandedProps({\n          style: {\n            // We can even use the row.depth property\n            // and paddingLeft to indicate the depth\n            // of the row\n            paddingLeft: `${row.depth * 2}rem`\n          }\n        }),\n        children: row.isExpanded ? '-' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }, this) : null\n    }, ...columns]);\n  });\n  let rows = pagination ? dataTable.page : dataTable.rows;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isSearchable && /*#__PURE__*/_jsxDEV(GlobalFilter, {\n      preGlobalFilteredRows: dataTable.preGlobalFilteredRows,\n      globalFilter: dataTable.state.globalFilter,\n      setGlobalFilter: dataTable.setGlobalFilter,\n      searchBoxClass: props['searchBoxClass']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...dataTable.getTableProps(),\n        className: classNames('table table-centered react-table', props['tableClass']),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: props['theadClass'],\n          children: (dataTable.headerGroups || []).map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: (headerGroup.headers || []).map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.sort && column.getSortByToggleProps()),\n              className: classNames({\n                sorting_desc: column.isSortedDesc === true,\n                sorting_asc: column.isSortedDesc === false,\n                sortable: column.sort === true\n              }),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...dataTable.getTableBodyProps(),\n          children: (rows || []).map((row, i) => {\n            dataTable.prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: (row.cells || []).map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps([{\n                    className: cell.column.className\n                  }]),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), pagination && /*#__PURE__*/_jsxDEV(Pagination, {\n      tableProps: dataTable,\n      sizePerPageList: sizePerPageList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(Table, \"YcoHVb56bgVOgzrcPmxucuVie8c=\", false, function () {\n  return [useTable];\n});\n\n_c4 = Table;\nexport default Table;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"IndeterminateCheckbox$forwardRef\");\n$RefreshReg$(_c3, \"IndeterminateCheckbox\");\n$RefreshReg$(_c4, \"Table\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/components/Table.tsx"],"names":["React","useRef","useEffect","forwardRef","useState","useTable","useSortBy","usePagination","useRowSelect","useGlobalFilter","useAsyncDebounce","useExpanded","classNames","Pagination","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","length","value","setValue","onChange","undefined","e","target","IndeterminateCheckbox","indeterminate","rest","ref","defaultRef","resolvedRef","current","Table","props","isSearchable","isSortable","pagination","isSelectable","isExpandable","sizePerPageList","otherProps","dataTable","columns","data","initialState","pageSize","hasOwnProperty","hooks","visibleColumns","push","id","Header","getToggleAllPageRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getToggleAllRowsExpandedProps","isAllRowsExpanded","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","page","state","getTableProps","headerGroups","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","sort","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","i","prepareRow","getRowProps","cells","cell","getCellProps","className"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, forwardRef, useState } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n// components\nimport Pagination from './Pagination';\n\ninterface GlobalFilterProps {\n    preGlobalFilteredRows: any;\n    globalFilter: any;\n    setGlobalFilter: any;\n    searchBoxClass: any;\n}\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }: GlobalFilterProps) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = useState<any>(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center\">\n                Search :{' '}\n                <input\n                    type=\"search\"\n                    value={value || ''}\n                    onChange={(e: any) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\ninterface IndeterminateCheckboxProps {\n    indeterminate: any;\n    children?: React.ReactNode;\n}\n\nconst IndeterminateCheckbox = forwardRef<HTMLInputElement, IndeterminateCheckboxProps>(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = useRef();\n        const resolvedRef: any = ref || defaultRef;\n\n        useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate;\n        }, [resolvedRef, indeterminate]);\n\n        return (\n            <>\n                <div className=\"form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                    <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n                </div>\n            </>\n        );\n    }\n);\n\ninterface TableProps {\n    isSearchable?: boolean;\n    isSortable?: boolean;\n    pagination?: boolean;\n    isSelectable?: boolean;\n    isExpandable?: boolean;\n    sizePerPageList?: {\n        text: string;\n        value: number;\n    }[];\n    columns: {\n        Header: string;\n        accessor: string;\n        sort?: boolean;\n        Cell?: any;\n        className?: string;\n    }[];\n    data: any[];\n    pageSize?: any;\n    searchBoxClass?: string;\n    tableClass?: string;\n    theadClass?: string;\n}\n\nconst Table = (props: TableProps) => {\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n    const sizePerPageList = props['sizePerPageList'] || [];\n\n    let otherProps: any = {};\n\n    if (isSearchable) {\n        otherProps['useGlobalFilter'] = useGlobalFilter;\n    }\n    if (isSortable) {\n        otherProps['useSortBy'] = useSortBy;\n    }\n    if (isExpandable) {\n        otherProps['useExpanded'] = useExpanded;\n    }\n    if (pagination) {\n        otherProps['usePagination'] = usePagination;\n    }\n    if (isSelectable) {\n        otherProps['useRowSelect'] = useRowSelect;\n    }\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: { pageSize: props['pageSize'] || 10 },\n        },\n        otherProps.hasOwnProperty('useGlobalFilter') && otherProps['useGlobalFilter'],\n        otherProps.hasOwnProperty('useSortBy') && otherProps['useSortBy'],\n        otherProps.hasOwnProperty('useExpanded') && otherProps['useExpanded'],\n        otherProps.hasOwnProperty('usePagination') && otherProps['usePagination'],\n        otherProps.hasOwnProperty('useRowSelect') && otherProps['useRowSelect'],\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns: any) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }: any) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns: any) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }: any) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}>\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n\n    let rows = pagination ? dataTable.page : dataTable.rows;\n\n    return (\n        <>\n            {isSearchable && (\n                <GlobalFilter\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                    globalFilter={dataTable.state.globalFilter}\n                    setGlobalFilter={dataTable.setGlobalFilter}\n                    searchBoxClass={props['searchBoxClass']}\n                />\n            )}\n\n            <div className=\"table-responsive\">\n                <table\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}>\n                    <thead className={props['theadClass']}>\n                        {(dataTable.headerGroups || []).map((headerGroup: any) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {(headerGroup.headers || []).map((column: any) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row: any, i: number) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {(row.cells || []).map((cell: any) => {\n                                        return (\n                                            <td\n                                                {...cell.getCellProps([\n                                                    {\n                                                        className: cell.column.className,\n                                                    },\n                                                ])}>\n                                                {cell.render('Cell')}\n                                            </td>\n                                        );\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={sizePerPageList} />}\n        </>\n    );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}