{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\layouts\\\\Horizontal\\\\Menu.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport FeatherIcon from 'feather-icons-react'; // helpers\n\nimport { findAllParent, findMenuItem } from '../../helpers/menu'; // constants\n\n// custom hook\nimport { useViewport } from '../../hooks/useViewPort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MenuItemWithChildren = ({\n  item,\n  tag,\n  linkClassName,\n  className,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu\n}) => {\n  _s();\n\n  const Tag = tag;\n  const {\n    width\n  } = useViewport();\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n  const showMenu = width <= 768 && open;\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n  /**\n   * toggles the menu\n   */\n\n  const toggleMenuItem = e => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    className: classNames('dropdown', className, activeMenuItems.includes(item.key) ? 'active' : ''),\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/#\",\n      onClick: toggleMenuItem,\n      \"data-menu-key\": item.key,\n      className: classNames('dropdown-toggle', 'arrow-none', linkClassName, {\n        active: activeMenuItems.includes(item.key)\n      }),\n      id: item.key,\n      role: \"button\",\n      \"data-bs-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": open,\n      children: [item.icon && /*#__PURE__*/_jsxDEV(FeatherIcon, {\n        icon: item.icon,\n        className: \"hori-icon me-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", item.label, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), item.children && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(subMenuClassNames, {\n        show: showMenu\n      }),\n      \"aria-labelledby\": item.key,\n      children: (item.children || []).map((child, i) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: child.children ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n              item: child,\n              tag: \"div\",\n              linkClassName: classNames('dropdown-item', activeMenuItems.includes(child.key) ? 'active' : ''),\n              activeMenuItems: activeMenuItems,\n              className: \"\",\n              subMenuClassNames: \"dropdown-menu\",\n              toggleMenu: toggleMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MenuItemLink, {\n              item: child,\n              className: classNames('dropdown-item', {\n                active: activeMenuItems.includes(child.key)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuItemWithChildren, \"82EUorP+ouu5HHgUZGHjqgnBkxQ=\", false, function () {\n  return [useViewport];\n});\n\n_c = MenuItemWithChildren;\n\nconst MenuItem = ({\n  item,\n  className,\n  linkClassName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classNames('nav-item', className),\n    children: /*#__PURE__*/_jsxDEV(MenuItemLink, {\n      item: item,\n      className: linkClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = MenuItem;\n\nconst MenuItemLink = ({\n  item,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: item.url,\n    target: item.target,\n    className: classNames(className),\n    \"data-menu-key\": item.key,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", item.label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n/**\n * Renders the application menu\n */\n\n\n_c3 = MenuItemLink;\n\nconst AppMenu = ({\n  menuItems\n}) => {\n  _s2();\n\n  let location = useLocation();\n  const menuRef = useRef(null);\n  const [topnavMenuItems] = useState(menuItems);\n  const [activeMenuItems, setActiveMenuItems] = useState([]);\n  /*\n   * toggle the menus\n   */\n\n  const toggleMenu = (menuItem, show) => {\n    if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(topnavMenuItems, menuItem)]);\n  };\n  /**\n   * activate the menuitems\n   */\n\n\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById('main-side-menu');\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items = div.getElementsByTagName('a');\n\n      for (let i = 0; i < items.length; ++i) {\n        if (location.pathname === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute('data-menu-key');\n        const activeMt = findMenuItem(topnavMenuItems, mid);\n\n        if (activeMt) {\n          setActiveMenuItems([activeMt['key'], ...findAllParent(topnavMenuItems, activeMt)]);\n        }\n      }\n    }\n  }, [location.pathname, topnavMenuItems]);\n  useEffect(() => {\n    if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n  }, [activeMenu, topnavMenuItems]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-nav\",\n      ref: menuRef,\n      id: \"main-side-menu\",\n      children: (topnavMenuItems || []).map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: item.children ? /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n            item: item,\n            tag: \"li\",\n            className: \"nav-item\",\n            subMenuClassNames: \"dropdown-menu\",\n            activeMenuItems: activeMenuItems,\n            linkClassName: \"nav-link\",\n            toggleMenu: toggleMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n            item: item,\n            linkClassName: classNames('nav-link', 'dropdown-toggle', {\n              active: activeMenuItems.includes(item.key)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AppMenu, \"9vwxf6IpuBxUXrJsg26N406qztg=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = AppMenu;\nexport default AppMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuItemWithChildren\");\n$RefreshReg$(_c2, \"MenuItem\");\n$RefreshReg$(_c3, \"MenuItemLink\");\n$RefreshReg$(_c4, \"AppMenu\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/layouts/Horizontal/Menu.tsx"],"names":["React","useEffect","useRef","useState","useCallback","Link","useLocation","classNames","FeatherIcon","findAllParent","findMenuItem","useViewport","MenuItemWithChildren","item","tag","linkClassName","className","subMenuClassNames","activeMenuItems","toggleMenu","Tag","width","open","setOpen","includes","key","showMenu","toggleMenuItem","e","preventDefault","status","active","icon","label","children","show","map","child","i","MenuItem","MenuItemLink","url","target","AppMenu","menuItems","location","menuRef","topnavMenuItems","setActiveMenuItems","menuItem","activeMenu","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","length","pathname","mid","getAttribute","activeMt","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport FeatherIcon from 'feather-icons-react';\n\n// helpers\nimport { findAllParent, findMenuItem } from '../../helpers/menu';\n\n// constants\nimport { MenuItemTypes } from '../../constants/menu';\n\n// custom hook\nimport { useViewport } from '../../hooks/useViewPort';\n\ninterface MenuItems {\n    item: MenuItemTypes;\n    tag?: string;\n    linkClassName?: string;\n    className?: string;\n    subMenuClassNames?: string;\n    activeMenuItems?: string[];\n    toggleMenu?: (item: any, status: boolean) => void;\n}\n\nconst MenuItemWithChildren = ({\n    item,\n    tag,\n    linkClassName,\n    className,\n    subMenuClassNames,\n    activeMenuItems,\n    toggleMenu,\n}: MenuItems) => {\n    const Tag: any = tag;\n    const { width } = useViewport();\n\n    const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\n\n    const showMenu = width <= 768 && open;\n\n    useEffect(() => {\n        setOpen(activeMenuItems!.includes(item.key));\n    }, [activeMenuItems, item]);\n\n    /**\n     * toggles the menu\n     */\n    const toggleMenuItem = (e: any) => {\n        e.preventDefault();\n        const status = !open;\n        setOpen(status);\n        if (toggleMenu) toggleMenu(item, status);\n        return false;\n    };\n\n    return (\n        <Tag className={classNames('dropdown', className, activeMenuItems!.includes(item.key) ? 'active' : '')}>\n            <Link\n                to=\"/#\"\n                onClick={toggleMenuItem}\n                data-menu-key={item.key}\n                className={classNames('dropdown-toggle', 'arrow-none', linkClassName, {\n                    active: activeMenuItems!.includes(item.key),\n                })}\n                id={item.key}\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded={open}>\n                {item.icon && <FeatherIcon icon={item.icon} className=\"hori-icon me-1\" />}\n                <span> {item.label} </span>\n                <div className=\"arrow-down\"></div>\n            </Link>\n\n            {item.children && (\n                <div className={classNames(subMenuClassNames, { show: showMenu })} aria-labelledby={item.key}>\n                    {(item.children || []).map((child, i) => {\n                        return (\n                            <React.Fragment key={i}>\n                                {child.children ? (\n                                    <>\n                                        {/* parent */}\n                                        <MenuItemWithChildren\n                                            item={child}\n                                            tag=\"div\"\n                                            linkClassName={classNames(\n                                                'dropdown-item',\n                                                activeMenuItems!.includes(child.key) ? 'active' : ''\n                                            )}\n                                            activeMenuItems={activeMenuItems}\n                                            className=\"\"\n                                            subMenuClassNames=\"dropdown-menu\"\n                                            toggleMenu={toggleMenu}\n                                        />\n                                    </>\n                                ) : (\n                                    <>\n                                        {/* child */}\n                                        <MenuItemLink\n                                            item={child}\n                                            className={classNames('dropdown-item', {\n                                                active: activeMenuItems!.includes(child.key),\n                                            })}\n                                        />\n                                    </>\n                                )}\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            )}\n        </Tag>\n    );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: MenuItems) => {\n    return (\n        <li className={classNames('nav-item', className)}>\n            <MenuItemLink item={item} className={linkClassName} />\n        </li>\n    );\n};\n\nconst MenuItemLink = ({ item, className }: MenuItems) => {\n    return (\n        <Link to={item.url!} target={item.target} className={classNames(className)} data-menu-key={item.key}>\n            <span> {item.label} </span>\n        </Link>\n    );\n};\n\n/**\n * Renders the application menu\n */\n\ninterface AppMenuProps {\n    menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n    let location = useLocation();\n    const menuRef = useRef(null);\n\n    const [topnavMenuItems] = useState<MenuItemTypes[]>(menuItems);\n    const [activeMenuItems, setActiveMenuItems] = useState<string[]>([]);\n\n    /*\n     * toggle the menus\n     */\n    const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n        if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(topnavMenuItems, menuItem)]);\n    };\n\n    /**\n     * activate the menuitems\n     */\n    const activeMenu = useCallback(() => {\n        const div = document.getElementById('main-side-menu');\n        let matchingMenuItem = null;\n\n        if (div) {\n            let items: any = div.getElementsByTagName('a');\n            for (let i: number = 0; i < items.length; ++i) {\n                if (location.pathname === items[i].pathname) {\n                    matchingMenuItem = items[i];\n                    break;\n                }\n            }\n\n            if (matchingMenuItem) {\n                const mid = matchingMenuItem.getAttribute('data-menu-key');\n                const activeMt = findMenuItem(topnavMenuItems, mid);\n                if (activeMt) {\n                    setActiveMenuItems([activeMt['key'], ...findAllParent(topnavMenuItems, activeMt)]);\n                }\n            }\n        }\n    }, [location.pathname, topnavMenuItems]);\n\n    useEffect(() => {\n        if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n    }, [activeMenu, topnavMenuItems]);\n\n    return (\n        <>\n            <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n                {(topnavMenuItems || []).map((item, idx) => {\n                    return (\n                        <React.Fragment key={idx}>\n                            {item.children ? (\n                                <MenuItemWithChildren\n                                    item={item}\n                                    tag=\"li\"\n                                    className=\"nav-item\"\n                                    subMenuClassNames=\"dropdown-menu\"\n                                    activeMenuItems={activeMenuItems}\n                                    linkClassName=\"nav-link\"\n                                    toggleMenu={toggleMenu}\n                                />\n                            ) : (\n                                <MenuItem\n                                    item={item}\n                                    linkClassName={classNames('nav-link', 'dropdown-toggle', {\n                                        active: activeMenuItems.includes(item.key),\n                                    })}\n                                />\n                            )}\n                        </React.Fragment>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default AppMenu;\n"]},"metadata":{},"sourceType":"module"}