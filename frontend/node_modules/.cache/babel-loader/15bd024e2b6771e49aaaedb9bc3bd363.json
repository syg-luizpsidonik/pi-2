{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\Analytics\\\\Overview\\\\BounceRateChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDayWiseTimeSeries = (baseval, count, yrange) => {\n  let lDate = 0;\n  let dt = [];\n  var i = 0;\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    dt.push({\n      x: x,\n      y: y\n    });\n    lDate = baseval;\n    baseval += 86400000;\n    i++;\n  }\n\n  return {\n    dt,\n    lDate\n  };\n};\n\nconst BounceRateChart = () => {\n  _s();\n\n  const {\n    dt,\n    lDate\n  } = getDayWiseTimeSeries(new Date('11 Feb 2021 GMT').getTime(), 10, {\n    min: 10,\n    max: 90\n  });\n  const [data, setData] = useState(dt);\n  const [lastDate, setLastDate] = useState(lDate);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const yRange = {\n        min: 10,\n        max: 90\n      };\n      var newDate = lastDate + 86400000;\n      setLastDate(newDate);\n      let array = [...data];\n      array.push({\n        x: newDate,\n        y: Math.floor(Math.random() * (yRange.max - yRange.min + 1)) + yRange.min\n      });\n      setData(array);\n    }, 2000);\n    return () => {\n      window.clearInterval(interval);\n    };\n  }, [data, lastDate]);\n  const apexBarChartOpts = {\n    chart: {\n      height: 371,\n      type: 'line',\n      animations: {\n        enabled: true,\n        easing: 'linear',\n        dynamicAnimation: {\n          speed: 2000\n        }\n      },\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: [3]\n    },\n    colors: ['#56bbd7'],\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      type: 'datetime',\n      range: 777600000\n    },\n    yaxis: {\n      max: 100\n    },\n    legend: {\n      show: false\n    },\n    grid: {\n      borderColor: '#f1f3fa'\n    }\n  };\n  const apexBarChartData = [{\n    name: 'Bounce rate',\n    data: data\n  }];\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: apexBarChartOpts,\n    series: apexBarChartData,\n    type: \"line\",\n    className: \"apex-charts\",\n    height: 371,\n    dir: \"ltr\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BounceRateChart, \"Vf8nog5W/+pqo/vxv75jR/nLYNU=\");\n\n_c = BounceRateChart;\nexport default BounceRateChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BounceRateChart\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/dashboard/Analytics/Overview/BounceRateChart.tsx"],"names":["React","useEffect","useState","Chart","getDayWiseTimeSeries","baseval","count","yrange","lDate","dt","i","x","y","Math","floor","random","max","min","push","BounceRateChart","Date","getTime","data","setData","lastDate","setLastDate","interval","setInterval","yRange","newDate","array","window","clearInterval","apexBarChartOpts","chart","height","type","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","width","colors","markers","size","xaxis","range","yaxis","legend","grid","borderColor","apexBarChartData","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\nconst getDayWiseTimeSeries = (baseval: any, count: any, yrange: any) => {\n    let lDate = 0;\n    let dt: Array<any> = [];\n    var i = 0;\n    while (i < count) {\n        var x = baseval;\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        dt.push({\n            x: x,\n            y: y,\n        });\n\n        lDate = baseval;\n        baseval += 86400000;\n        i++;\n    }\n\n    return { dt, lDate };\n};\n\nconst BounceRateChart = () => {\n    const { dt, lDate } = getDayWiseTimeSeries(new Date('11 Feb 2021 GMT').getTime(), 10, {\n        min: 10,\n        max: 90,\n    });\n\n    const [data, setData] = useState<Array<any>>(dt);\n    const [lastDate, setLastDate] = useState<number>(lDate);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const yRange: any = {\n                min: 10,\n                max: 90,\n            };\n            var newDate: any = lastDate + 86400000;\n            setLastDate(newDate);\n            let array: Array<any> = [...data];\n            array.push({\n                x: newDate,\n                y: Math.floor(Math.random() * (yRange.max - yRange.min + 1)) + yRange.min,\n            });\n            setData(array);\n        }, 2000);\n        return () => {\n            window.clearInterval(interval);\n        };\n    }, [data, lastDate]);\n\n    const apexBarChartOpts: ApexOptions = {\n        chart: {\n            height: 371,\n            type: 'line',\n            animations: {\n                enabled: true,\n                easing: 'linear',\n                dynamicAnimation: {\n                    speed: 2000,\n                },\n            },\n            toolbar: {\n                show: false,\n            },\n            zoom: {\n                enabled: false,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'smooth',\n            width: [3],\n        },\n        colors: ['#56bbd7'],\n        markers: {\n            size: 0,\n        },\n        xaxis: {\n            type: 'datetime',\n            range: 777600000,\n        },\n        yaxis: {\n            max: 100,\n        },\n        legend: {\n            show: false,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const apexBarChartData = [\n        {\n            name: 'Bounce rate',\n            data: data,\n        },\n    ];\n\n    return (\n        <Chart\n            options={apexBarChartOpts}\n            series={apexBarChartData}\n            type=\"line\"\n            className=\"apex-charts\"\n            height={371}\n            dir=\"ltr\"\n        />\n    );\n};\n\nexport default BounceRateChart;\n"]},"metadata":{},"sourceType":"module"}