{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\uikit\\\\Alerts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alerts = () => {\n  _s();\n\n  const [colors, setColors] = useState(['danger', 'warning', 'info']);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...colors];\n    list.splice(index, 1);\n    setColors(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"header-title mb-1 mt-0\",\n          children: \"Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-header\",\n          children: \"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), ['primary', 'secondary', 'success'].map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(Alert, {\n            variant: color,\n            children: [\"A simple \", color, \" alert\\u2014check it out!\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this);\n        }), (colors || []).map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(Alert, {\n            variant: color,\n            onClose: () => handleClose(index),\n            dismissible: true,\n            className: classNames({\n              'mb-0': index === colors.length - 1\n            }),\n            children: [\"A simple \", color, \" alert\\u2014check it out!\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Alerts, \"MkqJ8pNCj9+Qc9VMCR7nB+k0Nok=\");\n\n_c = Alerts;\nexport default Alerts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/uikit/Alerts.tsx"],"names":["React","useState","Card","Alert","classNames","Alerts","colors","setColors","handleClose","index","list","splice","map","color","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAW,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,CAAX,CAApC;AAEA;AACJ;AACA;;AACI,QAAMO,WAAW,GAAIC,KAAD,IAAmB;AACnC,UAAMC,IAAI,GAAG,CAAC,GAAGJ,MAAJ,CAAb;AACAI,IAAAA,IAAI,CAACC,MAAL,CAAYF,KAAZ,EAAmB,CAAnB;AACAF,IAAAA,SAAS,CAACG,IAAD,CAAT;AACH,GAJD;;AAMA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOK,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAoCE,GAApC,CAAwC,CAACC,KAAD,EAAQJ,KAAR,KAAkB;AACvD,8BACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEI,KAAhB;AAAA,oCACcA,KADd;AAAA,aAA4BJ,KAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANA,CAPL,EAeK,CAACH,MAAM,IAAI,EAAX,EAAeM,GAAf,CAAmB,CAACC,KAAD,EAAQJ,KAAR,KAAkB;AAClC,8BACI,QAAC,KAAD;AACI,YAAA,OAAO,EAAEI,KADb;AAGI,YAAA,OAAO,EAAE,MAAML,WAAW,CAACC,KAAD,CAH9B;AAII,YAAA,WAAW,MAJf;AAKI,YAAA,SAAS,EAAEL,UAAU,CAAC;AAAE,sBAAQK,KAAK,KAAKH,MAAM,CAACQ,MAAP,GAAgB;AAApC,aAAD,CALzB;AAAA,oCAMcD,KANd;AAAA,aAESJ,KAFT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAXA,CAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA9CD;;GAAMJ,M;;KAAAA,M;AAgDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nconst Alerts = () => {\n    const [colors, setColors] = useState<string[]>(['danger', 'warning', 'info']);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...colors];\n        list.splice(index, 1);\n        setColors(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <div>\n                    <h5 className=\"header-title mb-1 mt-0\">Alerts</h5>\n                    <p className=\"sub-header\">\n                        Provide contextual feedback messages for typical user actions with the handful of available and\n                        flexible alert messages.\n                    </p>\n\n                    {['primary', 'secondary', 'success'].map((color, index) => {\n                        return (\n                            <Alert variant={color} key={index}>\n                                A simple {color} alert—check it out!\n                            </Alert>\n                        );\n                    })}\n\n                    {(colors || []).map((color, index) => {\n                        return (\n                            <Alert\n                                variant={color}\n                                key={index}\n                                onClose={() => handleClose(index)}\n                                dismissible\n                                className={classNames({ 'mb-0': index === colors.length - 1 })}>\n                                A simple {color} alert—check it out!\n                            </Alert>\n                        );\n                    })}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Alerts;\n"]},"metadata":{},"sourceType":"module"}