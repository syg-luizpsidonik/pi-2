{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\uikit\\\\Spinners.tsx\";\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap'; // components\n\nimport Spinner from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n\nconst BorderedSpinners = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"fs-15 mb-1\",\n      children: \"Border spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: \"Use the border spinners for a lightweight loading indicator.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (colors || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"m-2\",\n          color: color,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BorderedSpinners;\n\nconst GrowingSpinners = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 mt-lg-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"fs-15 mb-1\",\n      children: \"Growing spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: \"If you don\\u2019t fancy a border spinner, switch to the grow spinner. While it doesn\\u2019t technically spin, it does repeatedly grow!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (colors || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"m-2\",\n          type: \"grow\",\n          color: color,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = GrowingSpinners;\n\nconst Spinners = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-1 mt-0\",\n        children: \"Spinners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(BorderedSpinners, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(GrowingSpinners, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Spinners;\nexport default Spinners;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BorderedSpinners\");\n$RefreshReg$(_c2, \"GrowingSpinners\");\n$RefreshReg$(_c3, \"Spinners\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/uikit/Spinners.tsx"],"names":["React","Row","Col","Card","Spinner","colors","BorderedSpinners","map","color","index","GrowingSpinners","Spinners"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,MAAgB,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,MAAzD,CAAzB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBACK,CAACD,MAAM,IAAI,EAAX,EAAeE,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,4BACI,QAAC,OAAD;AAAqB,UAAA,SAAS,EAAC,KAA/B;AAAqC,UAAA,KAAK,EAAED,KAA5C;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhBD;;KAAMH,gB;;AAkBN,MAAMI,eAAe,GAAG,MAAM;AAC1B,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,gBACK,CAACL,MAAM,IAAI,EAAX,EAAeE,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,4BACI,QAAC,OAAD;AAAqB,UAAA,SAAS,EAAC,KAA/B;AAAqC,UAAA,IAAI,EAAC,MAA1C;AAAiD,UAAA,KAAK,EAAED,KAAxD;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD;;MAAMC,e;;AAsBN,MAAMC,QAAQ,GAAG,MAAM;AACnB,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjBD;;MAAMA,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\n// components\nimport Spinner from '../../components/Spinner';\n\nconst colors: string[] = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n\nconst BorderedSpinners = () => {\n    return (\n        <div>\n            <h5 className=\"fs-15 mb-1\">Border spinner</h5>\n            <p className=\"sub-header\">Use the border spinners for a lightweight loading indicator.</p>\n            <div>\n                {(colors || []).map((color, index) => {\n                    return (\n                        <Spinner key={index} className=\"m-2\" color={color}>\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nconst GrowingSpinners = () => {\n    return (\n        <div className=\"mt-4 mt-lg-0\">\n            <h5 className=\"fs-15 mb-1\">Growing spinner</h5>\n            <p className=\"sub-header\">\n                If you don’t fancy a border spinner, switch to the grow spinner. While it doesn’t technically spin, it\n                does repeatedly grow!\n            </p>\n\n            <div>\n                {(colors || []).map((color, index) => {\n                    return (\n                        <Spinner key={index} className=\"m-2\" type=\"grow\" color={color}>\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nconst Spinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-1 mt-0\">Spinners</h4>\n\n                <Row>\n                    <Col xl={6}>\n                        <BorderedSpinners />\n                    </Col>\n                    <Col xl={6}>\n                        <GrowingSpinners />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Spinners;\n"]},"metadata":{},"sourceType":"module"}