{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\charts\\\\ColumnChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n// components\nimport Loader from '../../components/Loader'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColumnChart = ({\n  basicColumnChartData,\n  showLoader\n}) => {\n  const options = {\n    chart: {\n      height: 380,\n      type: 'bar'\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '55%'\n      }\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n    },\n    legend: {\n      offsetY: 7\n    },\n    yaxis: {\n      title: {\n        text: '$ (thousands)'\n      }\n    },\n    grid: {\n      row: {\n        colors: ['transparent', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.2\n      },\n      borderColor: '#f1f3fa'\n    },\n    tooltip: {\n      y: {\n        formatter: val => {\n          return '$ ' + val + ' thousands';\n        }\n      }\n    }\n  };\n  const series = [{\n    name: 'Net Profit',\n    data: basicColumnChartData.data1 || []\n  }, {\n    name: 'Revenue',\n    data: basicColumnChartData.data2 || []\n  }, {\n    name: 'Free Cash Flow',\n    data: basicColumnChartData.data3 || []\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-3\",\n        children: \"Basic Column Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), showLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 380,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"bar\",\n        height: 380,\n        className: \"apex-charts\",\n        dir: \"ltr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ColumnChart;\nexport default ColumnChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnChart\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/charts/ColumnChart.tsx"],"names":["React","Chart","Card","Loader","ColumnChart","basicColumnChartData","showLoader","options","chart","height","type","plotOptions","bar","horizontal","columnWidth","stroke","show","width","colors","xaxis","categories","legend","offsetY","yaxis","title","text","grid","row","opacity","borderColor","tooltip","y","formatter","val","series","name","data","data1","data2","data3","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ColumnChartProps {\n    basicColumnChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ColumnChart = ({ basicColumnChartData, showLoader }: ColumnChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n            },\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent'],\n        },\n        xaxis: {\n            categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n        },\n        legend: {\n            offsetY: 7,\n        },\n        yaxis: {\n            title: {\n                text: '$ (thousands)',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        tooltip: {\n            y: {\n                formatter: (val: number) => {\n                    return '$ ' + val + ' thousands';\n                },\n            },\n        },\n    };\n\n    const series = [\n        {\n            name: 'Net Profit',\n            data: basicColumnChartData.data1 || [],\n        },\n        {\n            name: 'Revenue',\n            data: basicColumnChartData.data2 || [],\n        },\n        {\n            name: 'Free Cash Flow',\n            data: basicColumnChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic Column Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ColumnChart;\n"]},"metadata":{},"sourceType":"module"}