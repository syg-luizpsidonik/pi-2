{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\uikit\\\\Offcanvas.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Button, Offcanvas, Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OffcanvasPlacement = ({\n  name,\n  placement\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  /**\n   * handle modal toggle\n   */\n\n  const toggle = () => {\n    setShow(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggle,\n      children: [name, \" offcanvas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: toggle,\n      placement: placement,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          id: \"offcanvasTopLabel\",\n          children: [\"Offcanvas \", placement]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"secondary\",\n            id: \"dropdown-basic\",\n            className: \"cursor-pointer\",\n            children: [\"Dropdown button \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"uil uil-angle-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Another action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              href: \"#\",\n              children: \"Something else here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OffcanvasPlacement, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = OffcanvasPlacement;\n\nconst Offcanvases = () => {\n  const placementOptions = [{\n    name: 'Top',\n    placement: 'top'\n  }, {\n    name: 'Bottom',\n    placement: 'bottom'\n  }, {\n    name: 'Left',\n    placement: 'start'\n  }, {\n    name: 'Right',\n    placement: 'end'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-1 mt-0 header-title\",\n        children: \"Offcanvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"Four options are available: top, bottom, left and right aligned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-list\",\n        children: (placementOptions || []).map((option, index) => /*#__PURE__*/_jsxDEV(OffcanvasPlacement, {\n          placement: option.placement,\n          name: option.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Offcanvases;\nexport default Offcanvases;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OffcanvasPlacement\");\n$RefreshReg$(_c2, \"Offcanvases\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/uikit/Offcanvas.tsx"],"names":["React","useState","Card","Button","Offcanvas","Dropdown","OffcanvasPlacement","name","placement","show","setShow","toggle","prevState","Offcanvases","placementOptions","map","option","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,iBAAlD;;;;AAOA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA2C;AAAA;;AAClE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAU,KAAV,CAAhC;AAEA;AACJ;AACA;;AACI,QAAMU,MAAM,GAAG,MAAM;AACjBD,IAAAA,OAAO,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAED,MAAnC;AAAA,iBACKJ,IADL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEE,IAAjB;AAAuB,MAAA,MAAM,EAAEE,MAA/B;AAAuC,MAAA,SAAS,EAAEH,SAAlD;AAAA,8BACI,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACI;AAAI,UAAA,EAAE,EAAC,mBAAP;AAAA,mCAAsCA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,SAAD,CAAW,IAAX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAAA,kCACI,QAAC,QAAD,CAAU,MAAV;AAAiB,YAAA,OAAO,EAAC,WAAzB;AAAqC,YAAA,EAAE,EAAC,gBAAxC;AAAyD,YAAA,SAAS,EAAC,gBAAnE;AAAA,wDACoB;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,QAAD,CAAU,IAAV;AAAA,oCACI,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AA6BH,CAvCD;;GAAMF,kB;;KAAAA,kB;;AAyCN,MAAMO,WAAW,GAAG,MAAM;AACtB,QAAMC,gBAAoC,GAAG,CACzC;AACIP,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,SAAS,EAAE;AAFf,GADyC,EAKzC;AACID,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,SAAS,EAAE;AAFf,GALyC,EASzC;AACID,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,SAAS,EAAE;AAFf,GATyC,EAazC;AACID,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,SAAS,EAAE;AAFf,GAbyC,CAA7C;AAmBA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACK,CAACM,gBAAgB,IAAI,EAArB,EAAyBC,GAAzB,CAA6B,CAACC,MAAD,EAASC,KAAT,kBAC1B,QAAC,kBAAD;AAAgC,UAAA,SAAS,EAAED,MAAM,CAACR,SAAlD;AAA8D,UAAA,IAAI,EAAEQ,MAAM,CAACT;AAA3E,WAAyBU,KAAzB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;MAAMJ,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button, Offcanvas, Dropdown } from 'react-bootstrap';\n\ninterface PlacementOptions {\n    name: string;\n    placement?: 'start' | 'end' | 'top' | 'bottom';\n}\n\nconst OffcanvasPlacement = ({ name, placement }: PlacementOptions) => {\n    const [show, setShow] = useState<boolean>(false);\n\n    /**\n     * handle modal toggle\n     */\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={toggle}>\n                {name} offcanvas\n            </Button>\n            <Offcanvas show={show} onHide={toggle} placement={placement}>\n                <Offcanvas.Header closeButton>\n                    <h5 id=\"offcanvasTopLabel\">Offcanvas {placement}</h5>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <div>\n                        Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\n                        images, lists, etc.\n                    </div>\n                    <Dropdown className=\"mt-3\">\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\" className=\"cursor-pointer\">\n                            Dropdown button <i className=\"uil uil-angle-down\"></i>\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst Offcanvases = () => {\n    const placementOptions: PlacementOptions[] = [\n        {\n            name: 'Top',\n            placement: 'top',\n        },\n        {\n            name: 'Bottom',\n            placement: 'bottom',\n        },\n        {\n            name: 'Left',\n            placement: 'start',\n        },\n        {\n            name: 'Right',\n            placement: 'end',\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mb-1 mt-0 header-title\">Offcanvas</h4>\n                <p className=\"sub-header\">Four options are available: top, bottom, left and right aligned.</p>\n\n                <div className=\"button-list\">\n                    {(placementOptions || []).map((option, index) => (\n                        <OffcanvasPlacement key={index} placement={option.placement!} name={option.name} />\n                    ))}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Offcanvases;\n"]},"metadata":{},"sourceType":"module"}