{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\apps\\\\Tasks\\\\List\\\\Section.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Collapse, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames'; // dummy data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task,\n  selectTask,\n  totalTasks\n}) => {\n  _s();\n\n  const [completed, setCompleted] = useState(task.stage === 'Done');\n  /*\n   * mark completd on selected task\n   */\n\n  const markCompleted = e => {\n    setCompleted(e.target.checked);\n    selectTask(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: classNames('justify-content-sm-between', {\n        'border-bottom': task.id !== totalTasks,\n        'mt-2': task.id !== 1,\n        'pt-1': task.id !== 1\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"mb-2 mb-lg-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: `task-${task.id}`,\n            checked: completed,\n            onChange: markCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `task-${task.id}`,\n            onClick: () => selectTask(task),\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-sm-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n              placement: \"bottom\",\n              overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                id: task.assigned_to,\n                children: [\"Assigned to \", task.assigned_to]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 42\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: task.assignee_avatar,\n                alt: \"\",\n                className: \"avatar-xs rounded-circle\",\n                id: `task-avatar-${task.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 mt-sm-0\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: classNames('list-inline', 'text-sm-end', {\n                'mb-0': task.id === totalTasks\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-inline-item pe-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"uil uil-schedule me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), \" \", task.due_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-inline-item pe-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"uil uil-align-alt me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), ' ', task.checklists.filter(t => t.completed).length, \" / \", task.checklists.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-inline-item pe-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"uil uil-comment-message me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), \" \", task.comments.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-inline-item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classNames('badge', {\n                    'badge-soft-danger': task.priority === 'High',\n                    'badge-soft-info': task.priority === 'Medium',\n                    'badge-soft-success': task.priority === 'Low'\n                  }, 'p-1'),\n                  children: task.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Task, \"HVvwG3rPCymMiiaUBzM4PT+624M=\");\n\n_c = Task;\n\nconst TaskSection = ({\n  title,\n  tasks,\n  selectTask\n}) => {\n  _s2();\n\n  const [isCollapsed, setISCollapse] = useState(true);\n  /*\n   * toggle task-dropdown\n   */\n\n  const toggleTask = () => setISCollapse(!isCollapsed);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"text-dark\",\n      to: \"#\",\n      onClick: toggleTask,\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: classNames('uil', {\n            'uil-angle-down': isCollapsed,\n            'uil-angle-right': !isCollapsed\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted fs-14\",\n          children: [\"(\", tasks.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0 border-0\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: (tasks || []).map((task, idx) => /*#__PURE__*/_jsxDEV(Task, {\n            selectTask: selectTask,\n            task: task,\n            totalTasks: tasks.length\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TaskSection, \"jkmMYpmdXb4v9N7tuBNpyTyqvRk=\");\n\n_c2 = TaskSection;\nexport default TaskSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"TaskSection\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/apps/Tasks/List/Section.tsx"],"names":["React","useState","Link","Row","Col","Card","Collapse","OverlayTrigger","Tooltip","classNames","Task","task","selectTask","totalTasks","completed","setCompleted","stage","markCompleted","e","target","checked","id","title","assigned_to","assignee_avatar","due_date","checklists","filter","t","length","comments","priority","TaskSection","tasks","isCollapsed","setISCollapse","toggleTask","map","idx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Collapse, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// dummy data\nimport { TaskItemTypes } from './data';\n\ninterface TaskProps {\n    task: TaskItemTypes;\n    selectTask: (task: TaskItemTypes) => void;\n    totalTasks: number;\n}\n\nconst Task = ({ task, selectTask, totalTasks }: TaskProps) => {\n    const [completed, setCompleted] = useState<boolean>(task.stage === 'Done');\n\n    /*\n     * mark completd on selected task\n     */\n    const markCompleted = (e: any) => {\n        setCompleted(e.target.checked);\n        selectTask(task);\n    };\n\n    return (\n        <>\n            <Row\n                className={classNames('justify-content-sm-between', {\n                    'border-bottom': task.id !== totalTasks,\n                    'mt-2': task.id !== 1,\n                    'pt-1': task.id !== 1,\n                })}>\n                <Col lg={6} className=\"mb-2 mb-lg-0\">\n                    <div className=\"form-check\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"form-check-input\"\n                            id={`task-${task.id}`}\n                            checked={completed}\n                            onChange={markCompleted}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={`task-${task.id}`}\n                            onClick={() => selectTask(task)}>\n                            {task.title}\n                        </label>\n                    </div>\n                </Col>\n                <Col lg={6}>\n                    <div className=\"d-sm-flex justify-content-between\">\n                        <div>\n                            <OverlayTrigger\n                                placement=\"bottom\"\n                                overlay={<Tooltip id={task.assigned_to}>Assigned to {task.assigned_to}</Tooltip>}>\n                                <img\n                                    src={task.assignee_avatar}\n                                    alt=\"\"\n                                    className=\"avatar-xs rounded-circle\"\n                                    id={`task-avatar-${task.id}`}\n                                />\n                            </OverlayTrigger>\n                        </div>\n                        <div className=\"mt-3 mt-sm-0\">\n                            <ul\n                                className={classNames('list-inline', 'text-sm-end', {\n                                    'mb-0': task.id === totalTasks,\n                                })}>\n                                <li className=\"list-inline-item pe-1\">\n                                    <i className=\"uil uil-schedule me-1\"></i> {task.due_date}\n                                </li>\n                                <li className=\"list-inline-item pe-1\">\n                                    <i className=\"uil uil-align-alt me-1\"></i>{' '}\n                                    {task.checklists.filter((t) => t.completed).length} / {task.checklists.length}\n                                </li>\n                                <li className=\"list-inline-item pe-2\">\n                                    <i className=\"uil uil-comment-message me-1\"></i> {task.comments.length}\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <span\n                                        className={classNames(\n                                            'badge',\n                                            {\n                                                'badge-soft-danger': task.priority === 'High',\n                                                'badge-soft-info': task.priority === 'Medium',\n                                                'badge-soft-success': task.priority === 'Low',\n                                            },\n                                            'p-1'\n                                        )}>\n                                        {task.priority}\n                                    </span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\ninterface TaskSectionState {\n    title: string;\n    tasks: TaskItemTypes[];\n    selectTask: (task: TaskItemTypes) => void;\n}\n\nconst TaskSection = ({ title, tasks, selectTask }: TaskSectionState) => {\n    const [isCollapsed, setISCollapse] = useState<boolean>(true);\n\n    /*\n     * toggle task-dropdown\n     */\n    const toggleTask = () => setISCollapse(!isCollapsed);\n\n    return (\n        <>\n            <Link className=\"text-dark\" to=\"#\" onClick={toggleTask}>\n                <h5 className=\"mb-0\">\n                    <i\n                        className={classNames('uil', {\n                            'uil-angle-down': isCollapsed,\n                            'uil-angle-right': !isCollapsed,\n                        })}></i>\n                    {title} <span className=\"text-muted fs-14\">({tasks.length})</span>\n                </h5>\n            </Link>\n            <Collapse in={isCollapsed}>\n                <Card className=\"mb-0 border-0\">\n                    <Card.Body>\n                        {(tasks || []).map((task, idx) => (\n                            <Task selectTask={selectTask} task={task} key={idx} totalTasks={tasks.length} />\n                        ))}\n                    </Card.Body>\n                </Card>\n            </Collapse>\n        </>\n    );\n};\n\nexport default TaskSection;\n"]},"metadata":{},"sourceType":"module"}