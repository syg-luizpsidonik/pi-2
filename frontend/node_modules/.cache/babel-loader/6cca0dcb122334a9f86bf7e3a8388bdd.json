{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\Analytics\\\\Overview\\\\SubscribersChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\n// dummy data\nimport { dataSeries } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubscribersChart = () => {\n  let ts2 = 1484418600000;\n  let dates = [];\n\n  for (let i = 0; i < 120; i++) {\n    ts2 = ts2 + 86400000;\n    const innerArr = [ts2, dataSeries[1][i].value];\n    dates.push(innerArr);\n  }\n\n  const apexBarChartOpts = {\n    chart: {\n      type: 'area',\n      stacked: false,\n      height: 371,\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: [3]\n    },\n    series: [{\n      name: 'Subscribers',\n      data: []\n    }],\n    markers: {\n      size: 0\n    },\n    colors: ['#5369f8'],\n    grid: {\n      row: {\n        colors: ['transparent', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.2\n      },\n      borderColor: '#f1f3fa'\n    },\n    fill: {\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.5,\n        opacityTo: 0.1,\n        stops: [0, 70, 80, 100]\n      }\n    },\n    yaxis: {\n      min: 20000000,\n      max: 250000000,\n      labels: {\n        formatter: function (val) {\n          return (val / 1000000).toFixed(0);\n        }\n      }\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      shared: false,\n      y: {\n        formatter: function (val) {\n          return (val / 1000000).toFixed(0);\n        }\n      }\n    },\n    responsive: [{\n      breakpoint: 600,\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          }\n        },\n        legend: {\n          show: false\n        }\n      }\n    }]\n  };\n  const apexBarChartData = [{\n    name: 'Subscribers',\n    data: dates\n  }];\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: apexBarChartOpts,\n    series: apexBarChartData,\n    type: \"area\",\n    className: \"apex-charts\",\n    height: 371\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SubscribersChart;\nexport default SubscribersChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscribersChart\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/dashboard/Analytics/Overview/SubscribersChart.tsx"],"names":["React","Chart","dataSeries","SubscribersChart","ts2","dates","i","innerArr","value","push","apexBarChartOpts","chart","type","stacked","height","toolbar","show","dataLabels","enabled","stroke","width","series","name","data","markers","size","colors","grid","row","opacity","borderColor","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","min","max","labels","formatter","val","toFixed","xaxis","tooltip","shared","y","responsive","breakpoint","options","legend","apexBarChartData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAGA;AACA,SAASC,UAAT,QAA2B,SAA3B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,MAAIC,GAAG,GAAG,aAAV;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BF,IAAAA,GAAG,GAAGA,GAAG,GAAG,QAAZ;AACA,UAAMG,QAAQ,GAAG,CAACH,GAAD,EAAMF,UAAU,CAAC,CAAD,CAAV,CAAcI,CAAd,EAAiBE,KAAvB,CAAjB;AACAH,IAAAA,KAAK,CAACI,IAAN,CAAWF,QAAX;AACH;;AAED,QAAMG,gBAA6B,GAAG;AAClCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,MADH;AAEHC,MAAAA,OAAO,EAAE,KAFN;AAGHC,MAAAA,MAAM,EAAE,GAHL;AAIHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AAJN,KAD2B;AASlCC,IAAAA,UAAU,EAAE;AACRC,MAAAA,OAAO,EAAE;AADD,KATsB;AAYlCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC,CAAD;AADH,KAZ0B;AAelCC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,aADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI,CAf0B;AAqBlCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KArByB;AAwBlCC,IAAAA,MAAM,EAAE,CAAC,SAAD,CAxB0B;AAyBlCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,GAAG,EAAE;AACDF,QAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,aAAhB,CADP;AACuC;AACxCG,QAAAA,OAAO,EAAE;AAFR,OADH;AAKFC,MAAAA,WAAW,EAAE;AALX,KAzB4B;AAgClCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,cAAc,EAAE,CADV;AAENC,QAAAA,aAAa,EAAE,KAFT;AAGNC,QAAAA,WAAW,EAAE,GAHP;AAINC,QAAAA,SAAS,EAAE,GAJL;AAKNC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ;AALD;AADR,KAhC4B;AAyClCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,GAAG,EAAE,QADF;AAEHC,MAAAA,GAAG,EAAE,SAFF;AAGHC,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACtB,iBAAO,CAACA,GAAG,GAAG,OAAP,EAAgBC,OAAhB,CAAwB,CAAxB,CAAP;AACH;AAHG;AAHL,KAzC2B;AAkDlCC,IAAAA,KAAK,EAAE;AACHjC,MAAAA,IAAI,EAAE;AADH,KAlD2B;AAqDlCkC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,CAAC,EAAE;AACCN,QAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACtB,iBAAO,CAACA,GAAG,GAAG,OAAP,EAAgBC,OAAhB,CAAwB,CAAxB,CAAP;AACH;AAHF;AAFE,KArDyB;AA6DlCK,IAAAA,UAAU,EAAE,CACR;AACIC,MAAAA,UAAU,EAAE,GADhB;AAEIC,MAAAA,OAAO,EAAE;AACLxC,QAAAA,KAAK,EAAE;AACHI,UAAAA,OAAO,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AADN,SADF;AAMLoC,QAAAA,MAAM,EAAE;AACJpC,UAAAA,IAAI,EAAE;AADF;AANH;AAFb,KADQ;AA7DsB,GAAtC;AA8EA,QAAMqC,gBAAgB,GAAG,CACrB;AACI/B,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,IAAI,EAAElB;AAFV,GADqB,CAAzB;AAOA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEK,gBAAhB;AAAkC,IAAA,MAAM,EAAE2C,gBAA1C;AAA4D,IAAA,IAAI,EAAC,MAAjE;AAAwE,IAAA,SAAS,EAAC,aAAlF;AAAgG,IAAA,MAAM,EAAE;AAAxG;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAlGD;;KAAMlD,gB;AAoGN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\n// dummy data\nimport { dataSeries } from '../data';\n\nconst SubscribersChart = () => {\n    let ts2 = 1484418600000;\n    let dates = [];\n\n    for (let i = 0; i < 120; i++) {\n        ts2 = ts2 + 86400000;\n        const innerArr = [ts2, dataSeries[1][i].value];\n        dates.push(innerArr);\n    }\n\n    const apexBarChartOpts: ApexOptions = {\n        chart: {\n            type: 'area',\n            stacked: false,\n            height: 371,\n            toolbar: {\n                show: false,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: [3],\n        },\n        series: [\n            {\n                name: 'Subscribers',\n                data: [],\n            },\n        ],\n        markers: {\n            size: 0,\n        },\n        colors: ['#5369f8'],\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        fill: {\n            gradient: {\n                shadeIntensity: 1,\n                inverseColors: false,\n                opacityFrom: 0.5,\n                opacityTo: 0.1,\n                stops: [0, 70, 80, 100],\n            },\n        },\n        yaxis: {\n            min: 20000000,\n            max: 250000000,\n            labels: {\n                formatter: function (val) {\n                    return (val / 1000000).toFixed(0);\n                },\n            },\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        tooltip: {\n            shared: false,\n            y: {\n                formatter: function (val) {\n                    return (val / 1000000).toFixed(0);\n                },\n            },\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const apexBarChartData = [\n        {\n            name: 'Subscribers',\n            data: dates,\n        },\n    ];\n\n    return (\n        <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"area\" className=\"apex-charts\" height={371} />\n    );\n};\n\nexport default SubscribersChart;\n"]},"metadata":{},"sourceType":"module"}