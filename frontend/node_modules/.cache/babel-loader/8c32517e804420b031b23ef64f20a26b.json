{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\charts\\\\MultipleYaxisChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n// components\nimport Loader from '../../components/Loader'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultipleYaxisChart = ({\n  multiYaxisChartData,\n  showLoader\n}) => {\n  const options = {\n    chart: {\n      stacked: false\n    },\n    stroke: {\n      width: [0, 0, 3]\n    },\n    xaxis: {\n      categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\n    },\n    yaxis: [{\n      axisTicks: {\n        show: true\n      },\n      axisBorder: {\n        show: true,\n        color: '#675db7'\n      },\n      labels: {\n        style: {\n          colors: ['#675db7']\n        }\n      },\n      title: {\n        text: 'Income (thousand crores)'\n      }\n    }, {\n      axisTicks: {\n        show: true\n      },\n      axisBorder: {\n        show: true,\n        color: '#23b397'\n      },\n      labels: {\n        style: {\n          colors: ['#23b397']\n        },\n        offsetX: 10\n      },\n      title: {\n        text: 'Operating Cashflow (thousand crores)'\n      }\n    }, {\n      opposite: true,\n      axisTicks: {\n        show: true\n      },\n      axisBorder: {\n        show: true,\n        color: '#e36498'\n      },\n      labels: {\n        style: {\n          colors: ['#e36498']\n        }\n      },\n      title: {\n        text: 'Revenue (thousand crores)'\n      }\n    }],\n    tooltip: {\n      followCursor: true,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== 'undefined') {\n            return y + ' thousand crores';\n          }\n\n          return y;\n        }\n      }\n    },\n    grid: {\n      borderColor: '#f1f3fa'\n    },\n    legend: {\n      offsetY: 7\n    },\n    responsive: [{\n      breakpoint: 600,\n      options: {\n        yaxis: {\n          show: false\n        },\n        legend: {\n          show: false\n        }\n      }\n    }]\n  };\n  const series = [{\n    name: 'Income',\n    type: 'column',\n    data: multiYaxisChartData.data1 || []\n  }, {\n    name: 'Cashflow',\n    type: 'column',\n    data: multiYaxisChartData.data2 || []\n  }, {\n    name: 'Revenue',\n    type: 'line',\n    data: multiYaxisChartData.data3 || []\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-3\",\n        children: \"Multiple Y-Axis Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), showLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 380,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"line\",\n        height: 380,\n        className: \"apex-charts\",\n        dir: \"ltr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MultipleYaxisChart;\nexport default MultipleYaxisChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleYaxisChart\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/charts/MultipleYaxisChart.tsx"],"names":["React","Chart","Card","Loader","MultipleYaxisChart","multiYaxisChartData","showLoader","options","chart","stacked","stroke","width","xaxis","categories","yaxis","axisTicks","show","axisBorder","color","labels","style","colors","title","text","offsetX","opposite","tooltip","followCursor","y","formatter","grid","borderColor","legend","offsetY","responsive","breakpoint","series","name","type","data","data1","data2","data3","height","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface MultipleYaxisChartProps {\n    multiYaxisChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst MultipleYaxisChart = ({ multiYaxisChartData, showLoader }: MultipleYaxisChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            stacked: false,\n        },\n        stroke: {\n            width: [0, 0, 3],\n        },\n        xaxis: {\n            categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\n        },\n        yaxis: [\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#675db7',\n                },\n                labels: {\n                    style: {\n                        colors: ['#675db7'],\n                    },\n                },\n                title: {\n                    text: 'Income (thousand crores)',\n                },\n            },\n\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#23b397',\n                },\n                labels: {\n                    style: {\n                        colors: ['#23b397'],\n                    },\n                    offsetX: 10,\n                },\n                title: {\n                    text: 'Operating Cashflow (thousand crores)',\n                },\n            },\n            {\n                opposite: true,\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#e36498',\n                },\n                labels: {\n                    style: {\n                        colors: ['#e36498'],\n                    },\n                },\n                title: {\n                    text: 'Revenue (thousand crores)',\n                },\n            },\n        ],\n        tooltip: {\n            followCursor: true,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y + ' thousand crores';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    yaxis: {\n                        show: false,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Income',\n            type: 'column',\n            data: multiYaxisChartData.data1 || [],\n        },\n        {\n            name: 'Cashflow',\n            type: 'column',\n            data: multiYaxisChartData.data2 || [],\n        },\n        {\n            name: 'Revenue',\n            type: 'line',\n            data: multiYaxisChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple Y-Axis Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MultipleYaxisChart;\n"]},"metadata":{},"sourceType":"module"}