{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projeto\\\\pi-2\\\\frontend\\\\src\\\\pages\\\\auth\\\\ForgetPassword.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FeatherIcons from 'feather-icons-react'; //actions\n\nimport { resetAuth, forgotPassword } from '../../redux/actions';\n// components\nimport { VerticalForm, FormInput } from '../../components/';\nimport AuthLayout from './AuthLayout'; // images\n\nimport logoDark from '../../assets/images/logo-dark.png';\nimport logoLight from '../../assets/images/logo-light.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/* bottom link */\nconst BottomLink = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: [t('Back to'), ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: '/auth/login',\n          className: \"text-primary fw-bold ms-1\",\n          children: t('Login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BottomLink, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BottomLink;\n\nconst ForgetPassword = () => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n  const {\n    loading,\n    passwordReset,\n    resetPasswordSuccess,\n    error\n  } = useSelector(state => ({\n    loading: state.Auth.loading,\n    user: state.Auth.user,\n    error: state.Auth.error,\n    passwordReset: state.Auth.passwordReset,\n    resetPasswordSuccess: state.Auth.resetPasswordSuccess\n  }));\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    email: yup.string().required(t('Please enter Email'))\n  }));\n  /*\n   * handle form submission\n   */\n\n  const onSubmit = formData => {\n    dispatch(forgotPassword(formData['email']));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthLayout, {\n      bottomLinks: /*#__PURE__*/_jsxDEV(BottomLink, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-logo mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"logo logo-dark text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"logo-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoDark,\n              alt: \"\",\n              height: \"24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"logo logo-light text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"logo-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoLight,\n              alt: \"\",\n              height: \"24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"h5 mb-0 mt-3\",\n        children: t('Reset Password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mt-1 mb-4\",\n        children: t(\"Enter your email address and we'll send you an email with instructions to reset your password.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), resetPasswordSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: resetPasswordSuccess.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 42\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"my-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), !passwordReset && /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: onSubmit,\n        resolver: schemaResolver,\n        defaultValues: {},\n        formClass: \"authentication-form\",\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: t('Email Address'),\n          type: \"email\",\n          name: \"email\",\n          startIcon: /*#__PURE__*/_jsxDEV(FeatherIcons, {\n            icon: 'mail',\n            className: \"icon-dual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 40\n          }, this),\n          placeholder: t('hello@coderthemes.com'),\n          containerClass: 'mb-3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-0 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100\",\n            type: \"submit\",\n            disabled: loading,\n            children: t('Submit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(ForgetPassword, \"xcXHTqKDXKeifjf814i6spVupZA=\", false, function () {\n  return [useDispatch, useTranslation, useSelector];\n});\n\n_c2 = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BottomLink\");\n$RefreshReg$(_c2, \"ForgetPassword\");","map":{"version":3,"sources":["C:/Users/User/projeto/pi-2/frontend/src/pages/auth/ForgetPassword.tsx"],"names":["React","useEffect","Button","Alert","Row","Col","Link","yup","yupResolver","useTranslation","useSelector","useDispatch","FeatherIcons","resetAuth","forgotPassword","VerticalForm","FormInput","AuthLayout","logoDark","logoLight","BottomLink","t","ForgetPassword","dispatch","loading","passwordReset","resetPasswordSuccess","error","state","Auth","user","schemaResolver","object","shape","email","string","required","onSubmit","formData","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FeatherIcons from 'feather-icons-react';\n\n//actions\nimport { resetAuth, forgotPassword } from '../../redux/actions';\nimport { RootState, AppDispatch } from '../../redux/store';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/';\n\nimport AuthLayout from './AuthLayout';\n\n// images\nimport logoDark from '../../assets/images/logo-dark.png';\nimport logoLight from '../../assets/images/logo-light.png';\n\ninterface UserData {\n    email: string;\n}\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Row className=\"mt-3\">\n            <Col xs={12} className=\"text-center\">\n                <p className=\"text-muted\">\n                    {t('Back to')}{' '}\n                    <Link to={'/auth/login'} className=\"text-primary fw-bold ms-1\">\n                        {t('Login')}\n                    </Link>\n                </p>\n            </Col>\n        </Row>\n    );\n};\n\nconst ForgetPassword = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    const { loading, passwordReset, resetPasswordSuccess, error } = useSelector((state: RootState) => ({\n        loading: state.Auth.loading,\n        user: state.Auth.user,\n        error: state.Auth.error,\n        passwordReset: state.Auth.passwordReset,\n        resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n    }));\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            email: yup.string().required(t('Please enter Email')),\n        })\n    );\n\n    /*\n     * handle form submission\n     */\n    const onSubmit = (formData: UserData) => {\n        dispatch(forgotPassword(formData['email']));\n    };\n\n    return (\n        <>\n            <AuthLayout bottomLinks={<BottomLink />}>\n                <div className=\"auth-logo mx-auto\">\n                    <Link to=\"/\" className=\"logo logo-dark text-center\">\n                        <span className=\"logo-lg\">\n                            <img src={logoDark} alt=\"\" height=\"24\" />\n                        </span>\n                    </Link>\n\n                    <Link to=\"/\" className=\"logo logo-light text-center\">\n                        <span className=\"logo-lg\">\n                            <img src={logoLight} alt=\"\" height=\"24\" />\n                        </span>\n                    </Link>\n                </div>\n\n                <h6 className=\"h5 mb-0 mt-3\">{t('Reset Password')}</h6>\n                <p className=\"text-muted mt-1 mb-4\">\n                    {t(\n                        \"Enter your email address and we'll send you an email with instructions to reset your password.\"\n                    )}\n                </p>\n\n                {resetPasswordSuccess && <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>}\n\n                {error && (\n                    <Alert variant=\"danger\" className=\"my-2\">\n                        {error}\n                    </Alert>\n                )}\n\n                {!passwordReset && (\n                    <VerticalForm<UserData>\n                        onSubmit={onSubmit}\n                        resolver={schemaResolver}\n                        defaultValues={{}}\n                        formClass=\"authentication-form\">\n                        <FormInput\n                            label={t('Email Address')}\n                            type=\"email\"\n                            name=\"email\"\n                            startIcon={<FeatherIcons icon={'mail'} className=\"icon-dual\" />}\n                            placeholder={t('hello@coderthemes.com')}\n                            containerClass={'mb-3'}\n                        />\n\n                        <div className=\"mb-0 text-center\">\n                            <Button className=\"w-100\" type=\"submit\" disabled={loading}>\n                                {t('Submit')}\n                            </Button>\n                        </div>\n                    </VerticalForm>\n                )}\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}